{"ast":null,"code":"var _jsxFileName = \"/Users/namhuiju/workplace/wanted-pre-onboarding-frontend/src/pages/Signup.js\",\n  _s = $RefreshSig$();\n// 회원가입 페이지\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSignup = () => {\n    if (!isEmailValid(email)) {\n      setErrorMessage('이메일 형식이 올바르지 않습니다.');\n    } else if (password.length < 8) {\n      setErrorMessage('비밀번호는 8자 이상이어야 합니다.');\n    } else {\n      // api \n      fetch('https://www.pre-onboarding-selection-task.shop/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      })\n      // axios.post('https://www.pre-onboarding-selection-task.shop/auth/signup', {\n      //     email,\n      //     password,\n      // })\n      .then(response => response.json()).then(data => {\n        console.log(data);\n        if (data.statusCode != 400) {\n          console.log('Signup successful!');\n          setErrorMessage('');\n          navigate('/signin'); // 로그인 페이지로 이동 \n        } else {\n          setErrorMessage('동일한 이메일이 이미 존재합니다.');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  // email 유효성 검사\n  const isEmailValid = email => {\n    return email.includes('@');\n  };\n  // password 유효성 검사\n  const isPasswordValid = password => {\n    return password.length >= 8;\n  };\n  const isFormValid = isEmailValid(email) && isPasswordValid(password);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uD398\\uC774\\uC9C0\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      \"data-testid\": \"email-input\",\n      type: \"email\",\n      value: email,\n      onChange: handleEmailChange,\n      placeholder: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      \"data-testid\": \"password-input\",\n      type: \"password\",\n      value: password,\n      onChange: handlePasswordChange,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"signup-button\",\n      onClick: handleSignup,\n      disabled: !isFormValid,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n_s(Signup, \"eE05CxDUtBhimkMPPTk2KnyWgL4=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleEmailChange","e","target","value","handlePasswordChange","handleSignup","isEmailValid","length","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","statusCode","catch","error","includes","isPasswordValid","isFormValid","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","color","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/namhuiju/workplace/wanted-pre-onboarding-frontend/src/pages/Signup.js"],"sourcesContent":["// 회원가입 페이지\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; \n\nconst Signup = () => {\n    const [email, setEmail]= useState('');\n    const [password, setPassword]= useState('');\n    const [errorMessage, setErrorMessage]= useState('');\n\n    const navigate = useNavigate();\n\n    const handleEmailChange =(e) =>{\n        setEmail(e.target.value);\n    };\n\n    const handlePasswordChange =(e) =>{\n        setPassword(e.target.value);\n    };\n\n    const handleSignup =() =>{\n        if (!isEmailValid(email)){\n            setErrorMessage('이메일 형식이 올바르지 않습니다.');\n        }else if (password.length <8 ){\n            setErrorMessage('비밀번호는 8자 이상이어야 합니다.');\n        }else{\n            // api \n            fetch('https://www.pre-onboarding-selection-task.shop/auth/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password}),\n            })\n            // axios.post('https://www.pre-onboarding-selection-task.shop/auth/signup', {\n            //     email,\n            //     password,\n            // })\n            .then((response) => response.json())\n            .then((data) =>{\n                console.log(data);\n                if (data.statusCode !=400){\n                    console.log('Signup successful!');\n                    setErrorMessage('');\n                    navigate('/signin'); // 로그인 페이지로 이동 \n                }else{\n                    setErrorMessage('동일한 이메일이 이미 존재합니다.');\n                }\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n        }\n    };\n    // email 유효성 검사\n    const isEmailValid = (email) => {\n        return email.includes('@');\n      };\n    // password 유효성 검사\n    const isPasswordValid = (password) => {\n        return password.length >= 8;\n    };\n\n    const isFormValid= isEmailValid(email) && isPasswordValid(password);\n\n    return (\n      <div>\n        <h1>회원가입 페이지</h1>\n        <p>회원가입 페이지입니다.</p>\n        {/* 예시 */}\n        <input \n            data-testid=\"email-input\"\n            type= \"email\"\n            value= {email}\n            onChange= {handleEmailChange}\n            placeholder=\"이메일\" />\n        <input \n            data-testid=\"password-input\"\n            type= \"password\"\n            value= {password}\n            onChange= {handlePasswordChange}\n            placeholder=\"비밀번호\" />\n        {errorMessage && <p style={{color: 'red' }} > {errorMessage}</p> }\n        <button data-testid=\"signup-button\" onClick= {handleSignup} disabled= {!isFormValid}>회원가입</button>\n        {/* <button data-testid=\"signup-button\" disabled= {!isFormValid}>회원가입</button> */}\n      </div>\n    );\n  };\n  \n  export default Signup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}